import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

group 'io.sharedstreets'
version '1.1'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    maven { url "http://repository.apache.org" }
//    maven { url "http://repo.boundlessgeo.com/main/" }
//    maven { url "http://download.osgeo.org/webdav/geotools/" }
    mavenCentral()
}

def flinkversion = "1.4.1"
def protobufversion = "3.4.0"


dependencies {
    compile "org.apache.flink:flink-java:${flinkversion}"
    compile "org.apache.flink:flink-streaming-java_2.11:${flinkversion}"
    compile "org.apache.flink:flink-clients_2.11:${flinkversion}"
    compile "com.google.protobuf:protobuf-java:${protobufversion}"
    compile "com.jsoniter:jsoniter:0.9.15"
    compile 'commons-cli:commons-cli:1.4'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'com.esri.geometry:esri-geometry-api:1.2.1'
    compile 'joda-time:joda-time:2.9.9'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'io.sharedstreets.matcher.ingest.Ingester'
        )
    }
}

// this task generate a jar bundle that include all the flink stack,
// and permit to use the soft from a command line
task allJars(type: ShadowJar) {
    from sourceSets.main.output
    configurations = [project.configurations.compile]
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) { resource = 'reference.conf' }

    manifest {
        attributes 'Implementation-Title': 'sharedstreets-matcher', 'Implementation-Version': version
        attributes 'Main-Class': 'io.sharedstreets.matcher.ingest.Ingester'
    }
}

